---
templateClass: tmpl-home
---

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    {% include "components/seo.njk" %}

    <link rel="stylesheet" href="/assets/css/global.css" />
    <link rel="stylesheet" href="/assets/css/wiki.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/assets/css/WikiTextFormatting.css" />

    
    {% if navid %}
    <!-- There is no error here. -->
    <style>
         #Wiki_{{navid}}{ 
    background-color: var(--primary-100);
    color: var(--background-800);
    }
  </style>
  <!-- There is no error here. -->
  {% endif %}

</head>

<body>
    
    <!-- Header -->
    {% include "components/header.njk" %}

    <!-- Header -->
<main class="WikiContainer">
        {% include "components/astra-wiki.njk" %}

        <article class="WikiContent">
        {{ content | safe }}
    </article>

    <aside id="WikiContentsSideBar" class="sidebar">
        <h2>Contents</h2>
            {{ content | toc | safe }}

    </aside>
</main>

<div class="MobileSupportError">
<span>Sorry, this page doesnt currently support Mobile devices.<br>We are hard at work to impimplementliment this!</span>
<br><br>
<a href="/">Home</a>
</div>
    <!-- Footer -->
    {% include "components/footer.njk" %}
    <!-- Footer -->

</body>

<script src="/assets/js/WikiSideBar.js"></script>
</html>

<script>
    // Variable to keep track of the last heading with the class
    let lastScrolledHeading = null;

    // Function to toggle class based on heading visibility
    function toggleHeadingClass(entries) {
        entries.forEach(entry => {
            const headingId = entry.target.id; // Get the id of the heading
            const link = document.querySelector(`a[href="#${headingId}"]`); // Select the corresponding link
            
            if (link) { // Check if the link exists
                if (entry.isIntersecting) {
                    // If the current heading is the last one in view
                    if (lastScrolledHeading !== entry.target) {
                        // Remove the class from the previous last heading
                        if (lastScrolledHeading) {
                            const lastLink = document.querySelector(`a[href="#${lastScrolledHeading.id}"]`);
                            lastLink.classList.remove('scrolled-past');
                        }
                        // Add class to the current heading
                        link.classList.add('scrolled-past');
                        lastScrolledHeading = entry.target; // Update lastScrolledHeading
                    }
                } else if (lastScrolledHeading === entry.target) {
                    // Only clear lastScrolledHeading when the next heading is in view
                    const nextHeading = Array.from(entries).find(entry => entry.isIntersecting && entry.target !== lastScrolledHeading);
                    if (!nextHeading) {
                        return; // If no next heading is intersecting, do nothing
                    }
                }
            }
        });
    }

    // Create a unique Intersection Observer
    const uniqueIntersectionObserver = new IntersectionObserver(toggleHeadingClass, {
        threshold: 0.1, // Adjust as needed
        rootMargin: '0px 0px -90% 0px' // Adjust rootMargin to trigger when heading is near the top
    });

    // Select all headings (h1, h2, h3, h4) in the article
    const headings = document.querySelectorAll('article h1, article h2, article h3, article h4');

    // Observe each heading
    headings.forEach(heading => {
        uniqueIntersectionObserver.observe(heading);
    });
</script>



<style>
    /* Style for the class when heading is scrolled past */
    .scrolled-past {
        font-weight: bold; /* Example style */
        color: var(--primary-100) !important; /* Example style */
    }
</style>